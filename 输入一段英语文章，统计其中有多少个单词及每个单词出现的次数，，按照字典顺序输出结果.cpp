#include<stdio.h>
#include<string.h>
int main() 
{
	char w[100][30];//最多100个单词，每个单词长度不超过30个字母 
	char s[10][132];//记录10行，每一行最多132个字符 
	int i=0,word=0,n,m=0,j,p=0,q=0,t=2,c,a,k,f=0;
	char b[100][30];//记录不同的单词 ,注意添加结束符 
	int d[100];//记录每个不同的单词出现的次数 
	char z[30];//用来单词的交换 
    	gets(s[i]);	//可以直接这样操作二维数组的行吗？gets按回车，产生'\n',换完行，自动添加'\0' 
	while(strlen(s[i])>0)//strlen函数计算'\0'之前的字符个数，'\0'就存于第二行的字符中？ 
		{ 
  	    n=0;
            for(j=0;s[i][j]!='\0';j++) 
          {
              if(s[i][j]==' ')
              {
               n=0;
              }
              else
     	      if(n==0)
  	          {
  	           n=1;
  	           word++;
	          }
          } 
                for(j=0;s[i][j]!='\0';)
                { 
                   if(s[i][j]!=' ')
                    { 
                      w[p][q]=s[i][j];
                      j++;
                      q++;
                    }
                    else
                    { 
                    w[p][q]='\0';
                      p++;
                      q=0;
                      j++;
                    } 
	            }// 把字符统计进单词，用w[i][j]来记录每个单词 
	            i++;
	            gets(s[i]);
	    }
	    for(i=0;i<p;i++)
	    {
	    for(j=0;w[i][j]!='\0';j++)
	    printf("%c",w[i][j]);
	    printf("\n");
	    }
	    printf("%d",word);
	for(j=0;w[0][j]!='\0';j++)
	b[0][j]=w[0][j];
	b[0][j]='\0';//注意最后添加结束符 
	//b[0]=w[0];//想把w[0]存的这个单词赋给b[0] ,不能将一个数组赋给数组，错误 
    for(i=1;i<word;i++)//一共有word个单词 
    {
    //	for(p=0;p<=m;p++)//m初值为0 
      //  {
        //if(strcmp(w[i],b[p])==0)
        //break;
        //} 
		//if(p>m) //如果因为满足if的条件而跳出循环，p一定小于i 
	    //{
	    //	m++;//m变成1 
            // b[i]=w[i];//把不同的单词存到b数组中,不能将一个一维数组赋给一个一维数组 
          //  t=2;
            //   for(j=0;w[i][j]!='\0';j++)
              // b[m][j]=w[i][j];
              // b[m][j]='\0'; 
    	       //for(j=i+1;j<word;j++)
    	      // {
                //if(strcmp(b[m],w[j])==0)
                //d[f]=t++;//不同的单词出现的次数 ,f初值为0,t的初值为2
                //else
                //d[f]=t-1;//f始终比m少一个 
               //}
               //f++;
        //}
    //}
    //c=m+1;//共c个不同的单词,因为m是从0开始记录不同单词的 
 	//for(i=0;i<c-1;i++)
	//{
	//	k=i;
    //	for(j=i+1;j<c;j++)
    //	{ 
	 //   if(strcmp(b[i],b[j])>0)
     //   	k=j;
    //    }
    //    if(k!=i)
    //    {
    //  	strcpy(z,b[i]);strcpy(b[i],b[j]);strcpy(b[j],z);
    //  	a=d[i-1];d[i-1]=d[j-1];d[j-1]=a;//同时交换每个不同的单词出现的次数 
	//    }
	 //   for(j=0;b[i][j]!='\0';j++)
	//    {
	 //       printf("%c",b[i][j]); //可以直接在排序循环中输出 
	 //   }
	//    printf("    %d",d[i-1]);
	    printf("\n");
    return 0;//最后考虑简便方法，以及不区分大小写字母的问题，不考虑标点符号和数字 
}
}
